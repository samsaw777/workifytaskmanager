generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  email     String   @unique
  username  String   @unique
  profile   String
  password  String
  project Project[]
  issues Issues[]
}

model Project{
  id Int @id @default(autoincrement())
  isKanban Boolean
  isScrum Boolean
  isBug Boolean
  createdAt DateTime @default(now())
  name String @unique
  userId String
  isPrivate Boolean
  User User @relation(fields: [userId], references: [id],onDelete: Cascade)
  members Members[]
  board Board[]
}

model Members{
  id Int @id @default(autoincrement())
  email String 
  userId String
  profileImage String
  role String
  projectId Int
  Project Project @relation(fields: [projectId], references: [id],onDelete: Cascade)
}

model Issues{
  id Int @id @default(autoincrement())
  type String
  issue String
  projectId Int
  username String
  profile String
  userId String
  sectionId Int
  sectionName Int
   Section Section @relation(fields: [sectionId], references: [id],onDelete: Cascade)
  User User @relation(fields: [userId], references: [id], onDelete: Cascade)
}


model Board{
    id String   @id @default(uuid())
    type String
    projectId Int
    Project Project @relation(fields: [projectId], references: [id],onDelete: Cascade)
    sections Section[]
}

model Section{
  id Int @id @default(autoincrement())
  title String
  boardId String
  Board Board @relation(fields: [boardId], references: [id],onDelete: Cascade)
  issues Issues[]
}
